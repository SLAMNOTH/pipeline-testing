trigger:
- none

variables:
  resourceGroupName: 'winvm-rg'
  location: 'westeurope'
  templateFile: './main.bicep'
  adminUN: 'azureuser' # adminPASS is a secret pipeline variable

stages:
- stage: Deploy
  displayName: 'Deploy Infrastructure'
  jobs:
  - job: DeployVM
    displayName: 'Deploy Windows VM with Bicep'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: AzureCLI@2
      displayName: 'Run Bicep Deployment'
      inputs:
        azureSubscription: 'azure-connection'
        scriptType: bash
        scriptLocation: inlineScript
        useGlobalConfig: false
        inlineScript: |
          az group create --name $(resourceGroupName) --location $(location)
          az deployment group create \
            --resource-group $(resourceGroupName) \
            --template-file $(templateFile) \
            --parameters adminUsername="$(adminUN)" adminPassword="$(adminPASS)"

- stage: Test
  displayName: 'Test Deployment'
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: ValidateVM
    displayName: 'Validate VM Status'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Check VM PowerState'
      inputs:
        azureSubscription: 'azure-connection'
        scriptType: bash
        scriptLocation: inlineScript
        useGlobalConfig: false
        inlineScript: |
          echo "Getting VM status..."
          vmState=$(az vm get-instance-view --name win-vm --resource-group $(resourceGroupName) --query "instanceView.statuses[?starts_with(code,'PowerState/')].displayStatus" -o tsv)
          echo "VM Status: $vmState"

          if [ "$vmState" != "VM running" ]; then
            echo "VM is not running."
            exit 1
          fi

          echo "VM is running."
